// <auto-generated />
using System;
using EMS.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMS.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241218121056_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EMS.Domain.Entities.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ManagerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId")
                        .IsUnique()
                        .HasFilter("[ManagerId] IS NOT NULL");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = "250a8d45-f79c-47ab-8c54-f64428d30578",
                            Budget = 50000m,
                            CreateBy = "admin",
                            CreateDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8178),
                            DepartmentName = "HR",
                            IsActive = true,
                            IsDelete = false,
                            ManagerId = "250a8d45-f79c-47ab-8c54-f64428d30578",
                            UpdateBy = "admin",
                            UpdateDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8172)
                        },
                        new
                        {
                            Id = "82c23b26-46f0-4e44-8936-39b247a845ab",
                            Budget = 100000m,
                            CreateBy = "admin",
                            CreateDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8185),
                            DepartmentName = "IT",
                            IsActive = true,
                            IsDelete = false,
                            ManagerId = "82c23b26-46f0-4e44-8936-39b247a845ab",
                            UpdateBy = "admin",
                            UpdateDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8183)
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = "6f368bcb-8c5f-4db7-a857-1342189475ee",
                            CreateDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8338),
                            DepartmentId = "250a8d45-f79c-47ab-8c54-f64428d30578",
                            EmployeeName = "John",
                            IsActive = true,
                            IsDelete = false,
                            JoiningDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Manager",
                            UpdateBy = "admin",
                            UpdateDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8335)
                        },
                        new
                        {
                            Id = "022d2414-6306-4385-8034-280067946c52",
                            CreateDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8342),
                            DepartmentId = "82c23b26-46f0-4e44-8936-39b247a845ab",
                            EmployeeName = "Jane",
                            IsActive = true,
                            IsDelete = false,
                            JoiningDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Developer",
                            UpdateBy = "admin",
                            UpdateDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8341)
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.PerformanceReview", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ReviewScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PerformanceReviews");

                    b.HasData(
                        new
                        {
                            Id = "be28630a-fe29-4c7a-aacc-d0c9caf5168f",
                            CreateBy = "admin",
                            CreateDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8383),
                            EmployeeId = "6f368bcb-8c5f-4db7-a857-1342189475ee",
                            IsActive = true,
                            IsDelete = false,
                            ReviewDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8379),
                            ReviewNote = "Excellent performance",
                            ReviewScore = 4.5m,
                            UpdateDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8371)
                        },
                        new
                        {
                            Id = "9d6610bd-b3f2-423a-b62f-fdba5259f320",
                            CreateBy = "admin",
                            CreateDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8393),
                            EmployeeId = "022d2414-6306-4385-8034-280067946c52",
                            IsActive = true,
                            IsDelete = false,
                            ReviewDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8391),
                            ReviewNote = "Good performance",
                            ReviewScore = 3.8m,
                            UpdateDate = new DateTime(2024, 12, 18, 12, 10, 55, 271, DateTimeKind.Utc).AddTicks(8389)
                        });
                });

            modelBuilder.Entity("EMS.Domain.Entities.Department", b =>
                {
                    b.HasOne("EMS.Domain.Entities.Employee", "Manager")
                        .WithOne("Department")
                        .HasForeignKey("EMS.Domain.Entities.Department", "ManagerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("EMS.Domain.Entities.PerformanceReview", b =>
                {
                    b.HasOne("EMS.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EMS.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Department");
                });
#pragma warning restore 612, 618
        }
    }
}
